{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Task from \"./src/components/Task\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    task = _useState2[0],\n    setTask = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    listTask = _useState4[0],\n    setListTask = _useState4[1];\n  var handlerSubmit = function handlerSubmit() {\n    if (task !== \"\") {\n      setListTask(function (pre) {\n        return [].concat(_toConsumableArray(pre), [task]);\n      });\n      setTask(\"\");\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.tasksWrapper,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Today Tasks\"\n      }), _jsx(View, {\n        style: styles.items,\n        children: listTask.length > 0 ? listTask.map(function (item) {\n          return _jsx(Task, {\n            text: item\n          });\n        }) : _jsx(Text, {\n          style: {\n            color: \"red\",\n            textAlign: \"center\",\n            fontSize: 20\n          },\n          children: \"No task today\"\n        })\n      })]\n    }), _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"height\" : \"padding\",\n      style: styles.writeTextWrapper,\n      children: [_jsx(TextInput, {\n        style: [styles.input],\n        onChangeText: function onChangeText(text) {\n          return setTask(text);\n        },\n        value: task,\n        placeholder: \"Write a task\"\n      }), _jsx(TouchableOpacity, {\n        activeOpacity: 0.5,\n        onPress: handlerSubmit,\n        children: _jsx(View, {\n          style: styles.addWrapper,\n          children: _jsx(Text, {\n            style: styles.addText,\n            children: \"+\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 40,\n    backgroundColor: \"#e6e6ec\"\n  },\n  tasksWrapper: {\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: \"700\"\n  },\n  items: {\n    marginTop: 20\n  },\n  writeTextWrapper: {\n    paddingHorizontal: 10,\n    position: \"absolute\",\n    bottom: 60,\n    width: \"100%\",\n    borderBlockColor: \"black\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  input: {\n    padding: 15,\n    width: 250,\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    borderWidth: 1,\n    focus: {\n      color: \"red\"\n    }\n  },\n  addWrapper: {\n    width: 46,\n    height: 46,\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 60\n  },\n  addText: {\n    fontSize: 25\n  }\n});","map":{"version":3,"names":["Task","useState","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","task","setTask","_useState3","_useState4","listTask","setListTask","handlerSubmit","pre","concat","_toConsumableArray","View","style","styles","container","children","tasksWrapper","Text","sectionTitle","items","length","map","item","text","color","textAlign","fontSize","KeyboardAvoidingView","behavior","Platform","OS","writeTextWrapper","TextInput","input","onChangeText","value","placeholder","TouchableOpacity","activeOpacity","onPress","addWrapper","addText","StyleSheet","create","flex","paddingTop","backgroundColor","paddingHorizontal","fontWeight","marginTop","position","bottom","width","borderBlockColor","flexDirection","justifyContent","alignItems","padding","borderRadius","borderWidth","focus","height"],"sources":["C:/Users/Admin/OneDrive/Desktop/react_native/App.tsx"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Button from \"./src/components/button\";\nimport Task from \"./src/components/Task\";\nimport { useState } from \"react\";\nimport { color } from \"@shopify/restyle\";\n\nexport default function App() {\n  const [task, setTask] = useState(\"\");\n  const [listTask, setListTask] = useState<any>([]);\n\n\n  const handlerSubmit = () => {\n    if(task!==\"\"){\n      setListTask((pre: string) => [...pre, task]);\n      setTask(\"\")\n    }\n  };\n  return (\n    <View style={styles.container}>\n      {/* Today tasks */}\n      <View style={styles.tasksWrapper}>\n        <Text style={styles.sectionTitle}>Today Tasks</Text>\n        <View style={styles.items}>\n          {/* List item */}\n          {listTask.length > 0 ? (\n            listTask.map((item: string) => <Task text={item} />)\n          ) : (\n            <Text style={{ color: \"red\", textAlign: \"center\", fontSize: 20 }}>\n              No task today\n            </Text>\n          )}\n        </View>\n      </View>\n      {/* write a task */}\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"height\" : \"padding\"}\n        style={styles.writeTextWrapper}\n      >\n        <TextInput\n          style={[styles.input]}\n          onChangeText={(text) => setTask(text)}\n          value={task}\n          placeholder=\"Write a task\"\n        ></TextInput>\n        <TouchableOpacity activeOpacity={0.5} onPress={handlerSubmit}>\n          <View style={styles.addWrapper}>\n            <Text style={styles.addText}>+</Text>\n          </View>\n        </TouchableOpacity>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 40,\n    backgroundColor: \"#e6e6ec\",\n  },\n  tasksWrapper: {\n    paddingHorizontal: 20,\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: \"700\",\n  },\n  items: {\n    marginTop: 20,\n  },\n  writeTextWrapper: {\n    paddingHorizontal: 10,\n    position: \"absolute\",\n    bottom: 60,\n    width: \"100%\",\n    borderBlockColor: \"black\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n  input: {\n    padding: 15,\n    width: 250,\n    backgroundColor: \"white\",\n    borderRadius: 50,\n    // borderColor:\"#c0c0c0\",\n    borderWidth: 1,\n    focus:{color:\"red\"}\n  },\n  addWrapper: {\n    width: 46,\n    height: 46,\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 60,\n  },\n  addText: {\n    fontSize: 25,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}